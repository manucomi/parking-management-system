name: Frontend CI/CD Pipeline

on:
    pull_request:
        branches: [main]
        paths:
            - 'apps/frontend/**'
            - '.github/workflows/frontend-ci.yml'
            - '.changeset/**'
            - 'package.json'
            - 'turbo.json'
    push:
        branches: [main]
        paths:
            - 'apps/frontend/**'
            - '.github/workflows/frontend-ci.yml'
            - '.changeset/**'
            - 'package.json'
            - 'turbo.json'

jobs:
    # Validate changeset in PRs
    changeset_check:
        name: Check Changeset (PR only)
        runs-on: ubuntu-latest
        if: github.event_name == 'pull_request'

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Check for changeset
              run: |
                  if [ -z "$(ls -A .changeset/*.md 2>/dev/null | grep -v README)" ]; then
                    echo "❌ No changeset found!"
                    echo "Please run 'npm run change:add' to create a changeset."
                    echo "This describes what changed and will be used for release notes."
                    exit 1
                  else
                    echo "✅ Changeset found!"
                  fi

    frontend_ci:
        name: Validate Frontend (Lint + Test + Build)
        runs-on: ubuntu-latest
        needs: changeset_check
        if: always() && (needs.changeset_check.result == 'success' || github.event_name == 'push')

        defaults:
            run:
                working-directory: apps/frontend

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Run Linter
              run: npm run lint

            - name: Run Tests
              run: npm run test

            - name: Build Next.js App
              run: npm run build

    # Version bump and release on merge to main
    release:
        name: Version Bump & Release Notes
        needs: frontend_ci
        runs-on: ubuntu-latest
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Configure Git
              run: |
                  git config user.name "github-actions[bot]"
                  git config user.email "github-actions[bot]@users.noreply.github.com"

            - name: Apply changesets and create release PR
              uses: changesets/action@v1
              with:
                  version: npm run change:version
                  publish: npm run release:notes
                  commit: 'chore: version bump and release notes'
                  title: 'chore: version bump and release notes'
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    deploy:
        name: Deploy to Vercel
        needs: release
        runs-on: ubuntu-latest
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Trigger Vercel Deploy
              env:
                  VERCEL_DEPLOY_HOOK_URL: ${{ secrets.VERCEL_DEPLOY_HOOK_URL }}
              run: |
                  echo "Triggering Vercel Deploy..."
                  curl -X POST "$VERCEL_DEPLOY_HOOK_URL"
