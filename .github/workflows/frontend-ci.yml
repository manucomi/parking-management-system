name: Frontend CI/CD Pipeline

permissions:
    contents: write
    pull-requests: write

on:
    pull_request:
        branches: [main]
        paths:
            - 'apps/frontend/**'
            - '.github/workflows/frontend-ci.yml'
            - '.changeset/**'
            - 'package.json'
            - 'turbo.json'

    push:
        branches: [main]
        paths:
            - 'apps/frontend/**'
            - '.github/workflows/frontend-ci.yml'
            - '.changeset/**'
            - 'package.json'
            - 'turbo.json'

jobs:
    validate_app:
        name: Validate App (Lint + Test + Build)
        runs-on: ubuntu-latest

        defaults:
            run:
                working-directory: apps/frontend

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Run Linter
              run: npm run lint

            - name: Run Tests
              run: npm run test

            - name: Build Next.js App
              run: npm run build

    release:
        name: Version Bump & Release Notes
        needs: validate_app
        runs-on: ubuntu-latest
        if: >
            always() &&
            needs.validate_app.result == 'success' &&
            github.event_name == 'push' &&
            github.ref == 'refs/heads/main'

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Configure Git
              run: |
                  git config user.name "github-actions[bot]"
                  git config user.email "github-actions[bot]@users.noreply.github.com"

            - name: Apply version bump
              run: npm run change:version

            - name: Push updated version and tags
              run: |
                  VERSION=$(node -p "require('./package.json').version")
                  echo "üì¶ New version: v$VERSION"
                  git push origin main
                  git tag v$VERSION
                  git push origin v$VERSION
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Create GitHub Release
              run: |
                  VERSION=$(node -p "require('./package.json').version")
                  echo "üìù Creating GitHub release for v$VERSION"
                  gh release create "v$VERSION" --title "Release $VERSION" --generate-notes
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    deploy:
        name: Deploy to Vercel
        needs: release
        runs-on: ubuntu-latest
        if: needs.release.result == 'success'

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Trigger Vercel Deploy
              env:
                  VERCEL_DEPLOY_HOOK_URL: ${{ secrets.VERCEL_DEPLOY_HOOK_URL }}
              run: |
                  echo "üöÄ Triggering Vercel Deploy..."
                  curl -X POST "$VERCEL_DEPLOY_HOOK_URL"
